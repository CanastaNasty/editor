TODO
----
Integrate with Github Issues
- Select active issue
- Auto-create branch for issue
- Include issue number in commits
- Commit/deploy to branch for issue
- TODO figure out how to handle merges (github interface, then reload and redeploy from master?)

Literate Code

Generate Docs

Live Update Demo
- Display Demo Runtime Errors in console

Open published page in editor and run live demo with same state as when editor was opened
- Pass git repo/branch metadata to published page for use in editor

Persist state across demo reloads

Organize File tree by type
File icons

.haml and .styl file type support
- Build our own ace cdn

Tests

Display Diffs

Gistquire promises refactor

First auth doesn't display in bar

Cache Git trees and files in some form of local storage

Editor plugins
- static analysis
- find in files

DONE
----
Compile Error file and line number in error messages

Saving UTF8 Characters gets messed up

Delete Files

Auth redirects to /tempest rather than /editor

Combine commit/publish step
- master branch should publish to index.html
- other branches should publish to <branch>.html
- Published branch is always latest

Don't pass directories to filetree

Saving repos with folders

Load file data better
- Handle folders in repos

Handle file types per extension

Save back to repo from gh-pages demo build

Use editor repo as the default rather than the gist
- Boot from built gh-pages html files.

Deploy a packaged app to gh-pages
- html page named for branch/sha and with source included

Load from actual git repos
Save changes back to real git repos

Visualize Rate Limit Remaining

Make errors like notices
Display Auth Scopes
Do not compile build.js if no js files

Move Gistquire to editor
Maintain editor state across open files
Error Log styles
Tell ace not to use worker becaues it fails to load cross domain